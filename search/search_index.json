{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a mi Pr\u00e1ctica de MkDocs","text":"<p>Para m\u00e1s informaci\u00f3n sobre MkDocs mkdocs.org.</p>"},{"location":"#comandos","title":"Comandos","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Crear un nuevo proyecto.</li> <li><code>mkdocs serve</code> - Activar la actualizaci\u00f3n en tiempo real de los documentos.</li> <li><code>mkdocs build</code> - Monta la documentaci\u00f3n del sitio.</li> <li><code>mkdocs -h</code> - Imprime mensaje de ayuda.</li> </ul>"},{"location":"#diseno-del-proyecto","title":"Dise\u00f1o del proyecto","text":"<pre><code>mkdocs.yml    # Archivo de configuraci\u00f3n.\ndocs/\n    index.md  # Documentaci\u00f3n de la p\u00e1gina principal.\n    ...       # Otras p\u00e1ginas de Markdown, im\u00e1genes u otros archivos.\n</code></pre>"},{"location":"about/","title":"Acerca de:","text":"<p>Esta es una prueba de intento de p\u00e1gina Web usando la herramienta de MkDocs.</p> <p>M\u00f3dulo de IAW de 2\u00ba ASIR</p> <p>Para m\u00e1s informaci\u00f3n sobre el m\u00f3dulo: IAW</p> <p>El repositorio d\u00f3nde se encuentra el c\u00f3digo de esta p\u00e1gina es el siguiente: Jekyll</p>"},{"location":"about/#informacion-de-contacto","title":"Informaci\u00f3n de contacto:","text":"<p>Correo: mbut182@g.educaand.es</p> <p>GitHub: Mihai95102</p>"},{"location":"practica1/","title":"IAW-Practica-01","text":"<p>Pr\u00e1ctica 01 del m\u00f3dulo de IAW</p>"},{"location":"practica1/#implementando-la-nueva-instancia","title":"Implementando la nueva Instancia","text":"<p>Lo primero que haremos ser\u00e1 entrar en dentro del panel EC2 en AWS Academy para poder lanzar la nueva instancia.</p> <p>La configuraci\u00f3n de la instancia ser\u00e1 la siguiente:</p> <p>1: Ponemos el nombre a la m\u00e1quina y seleccionamos como SO el Ubuntu</p> <p></p> <p>2: Seleccionamos el par de claves que hemos usado anteriormente vockey, aunque se podr\u00eda crear otro par de claves si queremos.</p> <p></p> <p>3: Antes de acabar con la configuraci\u00f3n de la instancia tendremos que ponerle una capacidad de RAM de 4GB para que la m\u00e1quina vaya de forma m\u00e1s fluida.</p> <p></p> <p>4: Como \u00faltimo paso para acabar con la configuraci\u00f3n de la instancia, haremos que la instancia que hemos creado tenga una IP El\u00e1stica, aunque este paso no es estrictamente necesario.</p>"},{"location":"practica1/#implementacion-de-la-instancia-en-visual-studio-code","title":"Implementaci\u00f3n de la Instancia en Visual Studio Code","text":"<p>Previamente a la implementaci\u00f3n de la instancia tendremos que instalar en el Visual Studio la extensi\u00f3n del Explorador Remoto de Microsoft</p> <p></p> <p>1: Una vez instalada la extensi\u00f3n a\u00f1adiremos el acceso a la m\u00e1quina dentro de la configuraci\u00f3n de los destinos SSH.</p> <p></p> <p>2: Hecho esto ya podremos conectarnos a la m\u00e1quina de RHEL remotamente desde el Visual Studio. Ahora clonaremos el repositorio que hemos creado en GitHub para poder empezar a trabajar. Para clonar el repositorio tendremos que copiar el enlace del repositorio y ejecutar el siguiente comando:</p> <pre><code>git clone https://github.com/Mihai95102/IAW-Practica-01.git\n</code></pre>"},{"location":"practica1/#empezando-a-automatizar-los-scripts","title":"Empezando a automatizar los scripts","text":"<p>Para empezar a trabajar, primero crearemos esta estrctura dentro del directorio:</p> <p></p> <p>Empezamos a crear el script de automatizaci\u00f3n para la instalaci\u00f3n de las herramientas LAMP</p> <p>El script install_lamp.sh contendr\u00e1 lo siguiente:</p> <pre><code>#!/bin/bash\n\nset -x\n\n# Actualizamos los repositorios\napt-get update\n\n# Actualizamos los paquetes nuevos\n# apt-get upgrade -y\n\n# Instalamos el servidor web apache\napt-get install apache2 -y\n\n# Instalamos el sistema gestor de BD\napt-get install mysql-server -y\n\n# Instalamos los m\u00f3dulos de PHP\napt-get install libapache2-mod-php php-mysql -y\n\n# Copiamos el archivo para ver que se ha instalado\ncp ../PHP/info.php /var/www/html\n</code></pre> <p>El siguiente script y \u00faltimo que creamremos ser\u00e1 uno el que instalaremos las herramientas de PHPMyAdmin, Adminer y GoAcess.</p> <p>El script de install.tools.sh ser\u00e1 el siguiente:</p> <pre><code>#!/bin/bash\n\nset -x\n\n# Variables de configuraci\u00f3n\nPHPMYADMIN_APP_PASSWORD=hola\nSTATS_USER=mihai\nSTATS_PASSWORD=hola\nDB_USER=mihai\nDB_PASSWORD=hola\n\n# Configuramos las respuestas para hacer una instalaci\u00f3n desatendida de phpMyAdmin\necho \"phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2\" | debconf-set-selections\necho \"phpmyadmin phpmyadmin/dbconfig-install boolean true\" | debconf-set-selections\necho \"phpmyadmin phpmyadmin/mysql/app-pass password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\necho \"phpmyadmin phpmyadmin/app-password-confirm password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\n\n# Creaci\u00f3n de la base de datos y el usuario de BD\nmysql -u root &lt;&lt;&lt; \"DROP USER IF EXISTS $DB_USER\"\nmysql -u root &lt;&lt;&lt; \"CREATE USER IF NOT EXISTS '$DB_USER'@'%' IDENTIFIED BY '$DB_PASSWORD'\"\nmysql -u root &lt;&lt;&lt; \"GRANT ALL PRIVILEGES ON *.* TO $DB_USER@'%'\"\n\n# Instalaci\u00f3n de phpMyAdmin\napt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl -y\n\n# Instalaci\u00f3n de Adminer:\n\n    # Descargamos el archivo de Adminer\n    wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1-mysql.php\n\n    # Creamos un directorio para Adminer\n    mkdir -p /var/www/html/adminer\n\n    # Renombramos el archivo\n    mv adminer-4.8.1-mysql.php /var/www/html/adminer/index.php\n\n# Instalaci\u00f3n de GoAccess:\n\n    # A\u00f1adimos el repositorio de GoAccess\n    echo \"deb http://deb.goaccess.io/ $(lsb_release -cs) main\" &gt; /etc/apt/sources.list.d/goaccess.list\n\n    # A\u00f1adimos la clave p\u00fablica de GoAccess en nuestra m\u00e1quina\n    wget -O - https://deb.goaccess.io/gnugpg.key | sudo apt-key add -\n\n    # Actualizamos los repositorios\n    apt update\n\n    # Instalamos GoAccess\n    apt install goaccess -y\n\n# Creamos el directorio stats\nmkdir -p /var/www/html/stats\n\n# Modificamos el propietario y el grupo del directorio /var/www/html\nchown www-data:www-data /var/www/html -R\n\n# Ejecutamos GoAcces en segundo plano\nsudo goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html --daemonize\n\n# Control de acceso a un directorio con .htaccess:\n\n    # Creamos un directorio para guardar el archivo de claves\n    mkdir -p /etc/apache2/claves\n\n    # Creamos un usuario/password/en un archivo .htpasswd\n    sudo htpasswd -bc /etc/apache2/claves/.htpasswd $STATS_USER $STATS_PASSWORD\n\n    # Copiamos el archivo de configuraci\u00f3n de Apache\n    cp ../Conf/000-default.conf /etc/apache2/sites-available\n\n    # Reiniciamos el servicio de Apache\n    systemctl restart apache2\n\n# Control de acceso a un directorio con .htaccess\n\n     # Creamos un usuario/password/en un archivo .htpasswd\n    sudo htpasswd -bc /etc/apache2/claves/.htpasswd $STATS_USER $STATS_PASSWORD\n\n    # Copiamos el archivo htaccess en /var/www/html/stats\n    cp ../htaccess/htaccess /var/www/html/stats/.htaccess\n\n    # Copiamos el archivo de configuraci\u00f3n de Apache\n    cp ../Conf/000-default-htaccess.conf /etc/apache2/sites-available/000-default.conf\n\n    # Reiniciamos el servicio de Apache\n    systemctl restart apache2\n</code></pre> <p>Una ejecutemos estos scripts podremos comprobar que la instalaci\u00f3n se ha realizado correctamente:</p> <p>1: Para comprobar que el servidor de PHPMyAdmin funciona tendremos que acceder a \u00e9l con la IP de la m\u00e1quina, \"18.234.12.215/phpmyadmin\".</p> <p></p> <p>Una vez accedemos con nuestro usuario y contrase\u00f1a podemos ver que tenemos acceso a todas las bases de datos del sistema.</p> <p></p> <p>2: A continuaci\u00f3n comprobaremos que podemos acceder al servidor de Adminer con el mismo usuario y contrase\u00f1a que hemos usado para PHPMyAdmin. Para acceder al servidor de Adminner escribiremos en el navegador \"18.234.12.215/adminer\".</p> <p></p> <p>Una vez accedemos con nuestro usuario y contrase\u00f1a podemos ver que tenemos acceso a todas las bases de datos del sistema.</p> <p></p> <p>3: Finalmente entraremos al servidor de GoAcess que registra la actividad que hay en el servidor. Para acceder a el con nuestro usuario y contrase\u00f1a ponemos en el navegador \"18.234.12.215/stats\".</p> <p></p> <p>Una vez accedamos podemos ver las estad\u00edsticas del servidor.</p> <p></p>"},{"location":"practica2/","title":"IAW-Practica-02","text":"<p>Pr\u00e1ctica 2 de instalaci\u00f3n de herramientas LAMP en RedHatEnterpriseLinux (RHEL)</p>"},{"location":"practica2/#implementando-la-nueva-instancia","title":"Implementando la nueva Instancia","text":"<p>Lo primero que haremos ser\u00e1 entrar en dentro del panel EC2 en AWS Academy para poder lanzar la nueva instancia.</p> <p>La configuraci\u00f3n de la instancia ser\u00e1 la siguiente:</p> <p>1: Ponemos el nombre a la m\u00e1quina y seleccionamos como SO el RedHat</p> <p></p> <p>2: Seleccionamos el par de claves que hemos usado anteriormente vockey, aunque se podr\u00eda crear otro par de claves si queremos.</p> <p></p> <p>3: Antes de acabar con la configuraci\u00f3n de la instancia tendremos que ponerle una capacidad de RAM de 4GB para que la m\u00e1quina vaya de forma m\u00e1s fluida.</p> <p></p> <p>4: Como \u00faltimo paso para acabar con la configuraci\u00f3n de la instancia, haremos que la instancia que hemos creado tenga una IP El\u00e1stica, aunque este paso no es estrictamente necesario.</p>"},{"location":"practica2/#implementacion-de-la-instancia-en-visual-studio-code","title":"Implementaci\u00f3n de la Instancia en Visual Studio Code","text":"<p>Previamente a la implementaci\u00f3n de la instancia tendremos que instalar en el Visual Studio la extensi\u00f3n del Explorador Remoto de Microsoft</p> <p></p> <p>1: Una vez instalada la extensi\u00f3n a\u00f1adiremos el acceso a la m\u00e1quina dentro de la configuraci\u00f3n de los destinos SSH.</p> <p></p> <p>2: Hecho esto ya podremos conectarnos a la m\u00e1quina de RHEL remotamente desde el Visual Studio. Ahora clonaremos el repositorio que hemos creado en GitHub para poder empezar a trabajar. Para clonar el repositorio tendremos que copiar el enlace del repositorio y ejecutar el siguiente comando:</p> <pre><code>git clone https://github.com/Mihai95102/IAW-Practica-02.git\n</code></pre>"},{"location":"practica2/#empezando-a-automatizar-los-scripts","title":"Empezando a automatizar los scripts","text":"<p>Para empezar a trabajar, primero crearemos esta estrctura dentro del directorio:</p> <p></p> <p>Empezamos a crear el script de automatizaci\u00f3n para la instalaci\u00f3n de las herramientas LAMP, adem\u00e1s de phpMyAdmin y Adminer.</p> <p>El script LAMP_tools.sh contendr\u00e1 lo siguiente:</p> <pre><code>#!/bin/bash\n\nset -x\n\n# Variables de configuraci\u00f3n\nDB_USER=mihai\nDB_PASSWORD=hola\n\n# Actualizamos los repositorios\ndnf update -y\n\n# Actualizamos los paquetes nuevos\n# dnf upgrade -y\n\n# Instalamos el servidor web apache\ndnf install httpd -y\n\n    # Iniciamos el servicio de Apache\n    systemctl start httpd\n\n    # Habilitamos el servicio de Apache\n    systemctl enable httpd\n\n# Instalamos el sistema gestor de BD\ndnf install mysql-server -y\n\n    # Iniciamos el servicio de MySQL\n    systemctl start mysqld\n\n    # Habilitamos el servicio de MySQL\n    systemctl enable mysqld\n\n# Instalamos PHP\ndnf install php -y\n\n    # Instalamos las extensiones de PHP\n    dnf install php-mysqlnd -y\n\n    dnf install php-zip php-json php-fpm -y\n\n    # Habilitamos el servicio de FPM\n    systemctl enable --now php-fpm\n\n    # Despu\u00e9s de la instalaci\u00f3n es necesario reiniciar el servicio de Apache\n    systemctl restart httpd\n\n# Copiamos el archivo para ver que se ha instalado\ncp ../php/info.php /var/www/html\n\n# Instalamos los repositorios necesarios para la instalaci\u00f3n de phpMyAdmin\ndnf install -y wget php php-pdo php-pecl-zip php-common php-mbstring php-cli php-xml tar\ndnf install -y php-mbstring\n\n# Instalaci\u00f3n de phpMyAdmin\n\n    # Creaci\u00f3n de la base de datos y el usuario de BD\n    mysql -u root &lt;&lt;&lt; \"DROP USER IF EXISTS $DB_USER\"\n    mysql -u root &lt;&lt;&lt; \"CREATE USER IF NOT EXISTS '$DB_USER'@'%' IDENTIFIED BY '$DB_PASSWORD'\"\n    mysql -u root &lt;&lt;&lt; \"GRANT ALL PRIVILEGES ON *.* TO $DB_USER@'%'\"\n\n    # Accedemos al directorio /var/www/html\n    cd /var/www/html\n\n    # Instalamos la utilidad wget para poder descargar el c\u00f3digo fuente de phpMyAdmin\n    dnf install wget\n\n    # Descargamos el c\u00f3digo fuente de phpMyAdmin\n    wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz\n\n    # Descomprimimos el archivo que acabamos de descargar\n    tar xvf phpMyAdmin-latest-all-languages.tar.gz\n\n    # Eliminamos el archivo .tar.gz\n    rm phpMyAdmin-latest-all-languages.tar.gz\n\n    # Renombramos el directorio\n    mv phpMyAdmin-5.2.0-all-languages/ phpmyadmin\n\n    # Modificamos el propietario y el grupo del directorio\n    chown -R apache:apache /var/www/html/phpmyadmin\n\n    # Creamos el archivo de configuraci\u00f3n a partir del archivo config.sample.inc.php\n    cp /var/www/html/phpmyadmin/config.sample.inc.php /var/www/html/phpmyadmin/config.inc.php\n\n    # Editamos el archivo de configuraci\u00f3n config.inc.php\n    # nano /var/www/html/phpmyadmin/config.inc.php\n\n# Instalaci\u00f3n de Adminer:\n\n    # Descargamos el archivo de Adminer\n    wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1-mysql.php\n\n    # Creamos un directorio para Adminer\n    mkdir -p /var/www/html/adminer\n\n    # Renombramos el archivo\n    mv adminer-4.8.1-mysql.php /var/www/html/adminer/index.php\n\n    # Modificamos el propietario y el grupo del directorio /var/www/html\n    chown -R apache:apache /var/www/html -R\n\n    # Reiniciamos Apache\n    systemctl restart httpd\n</code></pre> <p>1: Para comprobar que el servidor de PHPMyAdmin funciona tendremos que acceder a \u00e9l con la IP de la m\u00e1quina, \"18.234.12.215/phpmyadmin\".</p> <p></p> <p>Una vez accedemos con nuestro usuario y contrase\u00f1a podemos ver que tenemos acceso a todas las bases de datos del sistema.</p> <p></p> <p>2: A continuaci\u00f3n comprobaremos que podemos acceder al servidor de Adminer con el mismo usuario y contrase\u00f1a que hemos usado para PHPMyAdmin. Para acceder al servidor de Adminner escribiremos en el navegador \"18.234.12.215/adminer\".</p> <p></p> <p>Una vez accedemos con nuestro usuario y contrase\u00f1a podemos ver que tenemos acceso a todas las bases de datos del sistema.</p> <p></p> <p>Aqui termina la gu\u00eda de la instalaci\u00f3n de las herramientas LAMP.</p>"}]}